name: CD - Pipeline de Producción con Docker

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  production:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Instalar Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Instalar dependencias
        run: bun install

      - name: Configurar variables de entorno
        run: |
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_URL=${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}" >> .env
          echo "NEXT_PUBLIC_SUPABASE_ANON_KEY=${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}" >> .env

      - name: Ejecutar migraciones de la BD
        run: bunx prisma migrate deploy

      - name: Generar Prisma Client
        run: bunx prisma generate

      - name: Ejecutar tests con cobertura
        run: bun test --coverage

      - name: Verificar cobertura mínima (85%)
        run: |
          # Se asume que la salida de "bun test --coverage" contiene una línea con "All files"
          COVERAGE=$(bun test --coverage | grep 'All files' | awk '{print $6}' | sed 's/%//')
          echo "Cobertura global: $COVERAGE%"
          if (( $(echo "$COVERAGE < 85" | bc -l) )); then
            echo "La cobertura de pruebas es menor al 85%. No se permite continuar."
            exit 1
          fi

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Iniciar sesión en Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Construir imagen Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/devops:latest .

      - name: Subir imagen Docker
        run: docker push ${{ secrets.DOCKER_USERNAME }}/devops:latest
